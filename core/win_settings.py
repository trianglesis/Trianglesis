"""
Generated by 'django-admin startproject' using Django 1.11.6.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os
import sys
import logging
import socket
from core.config_passwords import django_set

log = logging.getLogger("core.corelogger")
# import MySQLdb


# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
PROJECT_ROOT = os.path.abspath(os.path.dirname(__file__))
sys.path.insert(0, os.path.join(BASE_DIR, 'core'))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# noinspection SpellCheckingInspection
SECRET_KEY = django_set['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

CURR_HOSTNAME = socket.getfqdn()
ALLOWED_HOSTS = ['localhost', '127.0.0.1']

# Application definition
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'rest_framework',
    'rest_framework.authtoken',
    'rest_auth',
    'django_celery_beat',
    'bootstrap4',
    'django_registration',
    'django_smtp_ssl',
    'core',
    'memes',
    'banking'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'core.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'static\\templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.static',
                'django.template.context_processors.media',
            ],
        },
    },
]

REST_FRAMEWORK = {
    # https://django-rest-auth.readthedocs.io/en/latest/api_endpoints.html

    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

WSGI_APPLICATION = 'core.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases
# https://stackoverflow.com/questions/26958592/django-after-upgrade-mysql-server-has-gone-away
# noinspection SpellCheckingInspection
DATABASES = {
    'default': {
        'ENGINE': django_set['DB']['ENGINE'],
        'NAME': django_set['DB']['NAME'],
        'USER': django_set['DB']['USER'],
        'PASSWORD': django_set['DB']['PASSWORD'],
        'HOST': django_set['DB']['HOST'],
        'PORT': django_set['DB']['PORT'],
        'CONN_MAX_AGE': 3600,
        'OPTIONS': {
            'read_default_file': '/etc/my.cnf',
        },
    }
}

# STATIC_ROOT = os.path.join(BASE_DIR, 'static')

STATICFILES_DIRS = (
    'static',
    os.path.join('static', 'admin'),
    os.path.join('static', 'pictures'),
    os.path.join('static', 'templates'),
    os.path.join('static', 'octicons'),
)

# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# https://docs.djangoproject.com/en/2.0/topics/email/
# EMAIL_USE_TLS = True
EMAIL_HOST = django_set['EMAIL_HOST']
EMAIL_PORT = django_set['EMAIL_PORT']
EMAIL_USE_SSL = django_set['EMAIL_USE_SSL']
EMAIL_HOST_USER = django_set['EMAIL_HOST_USER']
EMAIL_HOST_PASSWORD = django_set['EMAIL_HOST_PASSWORD']
DEFAULT_FROM_EMAIL = django_set['DEFAULT_FROM_EMAIL']
SERVER_EMAIL = django_set['SERVER_EMAIL']

# https://stackoverflow.com/a/32729304/4915733
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# https://stackoverflow.com/a/39792468
# EMAIL_BACKEND = 'django_smtp_ssl.SSLEmailBackend'

# Django registration:
ACCOUNT_ACTIVATION_DAYS = 7
REGISTRATION_OPEN = True

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/
LANGUAGE_CODE = 'en-us'

# TIME_ZONE = 'UTC'
TIME_ZONE = 'Europe/London'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# https://github.com/maxtepkeev/architect/issues/38
# https://github.com/celery/django-celery/issues/359
CONN_MAX_AGE = None

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_URL = '/static/'

MEDIA_URL = '/upload/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'upload')

# DEBUG OPT:
if os.name == "nt":
    log.debug("=========================================================")
    log.debug("PROJECT_ROOT:     %s", PROJECT_ROOT)
    log.debug("BASE DIR:         %s", BASE_DIR)
    log.debug("=========================================================")
    log.debug("TEMPLATES:        %s", TEMPLATES[0]['DIRS'][0])
    # log.debug("Static root:      %s", STATIC_ROOT)
    log.debug("MEDIA_URL:      %s", MEDIA_URL)
    log.debug("MEDIA_ROOT:      %s", MEDIA_ROOT)
    log.debug("=========================================================")
    log.debug("SYS PATH: %s", sys.path)
    log.debug("=========================================================")
    log.debug("STATICFILES_DIRS: %s", STATICFILES_DIRS)
